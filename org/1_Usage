- /usr: 시스템 디렉토리
    - /usr/lib: 라이브러리가 있음
    - /usr/bin: 사용자가 입력하는 커맨드가 있는 디렉토리
    - /usr/sbin: 시스템 관리자가 입력하는 커맨드가 있는 디렉토리
    - /usr/include: 헤더파일이 담긴 디렉토리
    - /usr/local: 새롭게 설치된 프로그램이 담김
- /var: 시스템의 로그가 담김
- /bin, /sbin: 루트 유저가 single-user-mode로 사용할 때 입력하는 커맨드가 담김
- /tmp: tmp에 있는 파일들은 리부트되면 다 날라가니까 주의

======================================================================================

ls -l letter_0610 하면 letter_0610의 Access Permission을 볼 수 있음
  -ㅁㅁㅁ/ㅁㅁㅁ/ㅁㅁㅁ 1 alex pubs 3355 May 2 10:52 letter_0610
- 맨 앞이 -이면 일반 파일, d이면 디렉토리 파일
- 첫 번째 세 칸은 Owner의 access permisson, 두 번째는 Group, 세 번째는 Other
    - -rwxr-xr—이면 Owner은 Read, Write, Execute 가능 / Group은 Read와 Execute 가능 / Other은 Read만 가능
    - 세 칸을 한 비트로 보면 8비트 → rwxr-xr—을 754로 표현 가능
- alex: Owner의 이름
- pubs: Group의 이름
- 3355: 파일의 크기
- May 2 10:52: 수정된 날짜
- letter_0610: 파일의 이름

======================================================================================

- chmod a+rw letter_0610: 모든 User Permisson에 대해 Read와 Write 권한을 letter_0610 파일에 추가
- -는 권한을 빼기
- chmod 700 check_spell: check_spell 파일에 대해 Owner은 Read, Write, Execute 권한을, Group과 Other은 아무 권한도 주지 않도록 변경

======================================================================================
### Basic Commands - File System related
- ls
    - 현재 있는 파일들의 리스트를 나열
    - ls -l은 .으로 시작하는 파일은 나열안하는데 ls -al은 .으로 시작하는 파일까지 포함하여 나열

- mkdir filename: 디렉토리 파일 만들기

- cd mydir: change directory

- rmdir mydir: 디렉토리 지움

- pwd: current directory를 알려줌 (print working dir)

- cp a b: b 내용을 a에 복사
    - cp -R dir1 dir2: dir2 아래의 파일 전부를 dir1에 복사, 디렉토리 copy에는 -R이 필요한 듯

- rm filename: 파일을 지움
    - rm -rf mydir는 directory 아래에 있는 파일 모두를 지움
    - rmdir은 빈 디렉토리만 지움

- mv a b: a, b가 둘 다 파일이면 파일 이름을 바꾸는 것, b가 디렉토리이면 파일 a를 디렉토리 b로 옮기는 것

- ln -s /home/project myproject: 바로가기 생성, cd myproject를 하면 /home/project로 바로 이동, ln = link

- du filename: 파일 용량을 알려줌(du = disk usage)

- mkfs: 파티션한 하드디스크를 포맷할 때 사용

- mount: 새로운 파일 시스템을 root fileSystem에 갖다 붙힘

======================================================================================
### Basic Commands - File related

- vi filename

- cat filename: 파일 내용을 보여줌

- more filename: cat과 비슷, 스크롤이 없고 스페이스로 뒤에 내용을 보도록

- ls -al | more: ls -al 명령어의 출력을 more이라는 명령어의 입력으로 넣겠다는 것을 보여줌
    - |: 파이프, 두개의 프로세스간의 통신 역할

- diff a b: 두 개의 파일 간의 차이를 알려줌, 버전 컨트롤 할 때 등에 사용
    - diff a b > tmp 라고 하면 tmp 파일에 그 결과값이 들어감

- head main / tail main: 파일의 앞/뒤 10줄을 나타냄

- file a.out: 파일에 대한 정보를 알려줌

- grep if conv.c: if라는 단어가 conv.c 파일 어디에 있는지 알려줌
    - grep if *.c: if라는 단어가 모든 파일에 대해 어떠한 c파일에 있는지 알려줌

- wc filename : 파일의 wordCount를 알려줌

- od filename: 파일의 내용을 binary로 표현

======================================================================================

### Process realted commands

- ps: 내가 실행시킨 프로세스에 대한 정보를 알려줌
    - ps -ef: 나 포함 모든 시스템이 실행시킨 모든 프로세스에 대한 정보를 알려줌
    - ps -ef | grep userID: 모든 프로세스에 대해 userID를 포함한 프로세스만 출력
- kill: 프로세스를 종료시킬 때 사용

======================================================================================

### ETC

- su - userID: 유저 switch
- script: 앞으로 칠 커맨드 및 화면 출력이 저장됨

======================================================================================

### File archive Commands

여러 개의 파일을 압축할 때 리눅스에서는 두 단계 필요

1. 여러 개의 파일을 하나의 파일로 모음
- tar cvf hw1.tar hw1.c hw1.h: hw1.c, hw1.h을 hw1.tar이라는 파일로 모음
    - tar cvf hw2.tar hw2: hw2 디렉토리 밑에 있는 모든 파일을 hw2.tar로 묶음
    - tar cvf hw3.tar *: 현재 디렉토리에 있는 모든 파일을 hw3.tar로 합침

- tar tvf hw1.tar: hw1.tar안에 있는 파일을 봄

- tar xvf hw1.tar: hw1.tar로 묶은 파일을 품

2. 압축
- gzip hw2.tar: hw2.tar을 압축 → hw2.tar.gz 파일이 됨

- gzip -d hw2.tar.gz: gz 파일을 풀기(decompress)

======================================================================================

### man(manual)

- 커맨드에 대한 정보를 알려줌) man fopen: fopen에 대한 설명을 해줌
    - man 1 command: 커맨드에 대한 정보
    - man 2 command: 시스템 콜에 대한 설명
    - man 3 command: 라이브러리에 대한 설명
    - man -a command: 모든 것에 대한 설명이 나옴
